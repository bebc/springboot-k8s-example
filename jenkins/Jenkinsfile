#!/usr/bin/env groovy

def projectProperties = [
        [$class: 'BuildDiscarderProperty', strategy: [$class: 'LogRotator', numToKeepStr: '5']],
]

properties(projectProperties)


podTemplate(label: 'mypod', cloud: 'kubernetes', containers: [
        containerTemplate(name: 'maven', image: 'maven', command: 'cat', ttyEnabled: true),
        containerTemplate(name: 'docker', image: 'docker', command: 'cat', ttyEnabled: true),
        containerTemplate(name: 'kubectl', image: 'lachlanevenson/k8s-kubectl:v1.10.2', command: 'cat', ttyEnabled: true)
],
        volumes: [
                hostPathVolume(hostPath: '/var/run/docker.sock', mountPath: '/var/run/docker.sock'),
                hostPathVolume(hostPath: '/root/.kube', mountPath: '/root/.kube')
        ]) {

    node('mypod') {

        def gitCommit
        def shortGitCommit
        def previousGitCommit

        container('maven') {

            stage('checkout') {
                checkout scm

                sh 'printenv'

                gitCommit = sh(script: "git rev-parse HEAD", returnStdout: true).trim()
                shortGitCommit = "${gitCommit[0..10]}"
                previousGitCommit = sh(script: "git rev-parse ${gitCommit}~", returnStdout: true)

                echo "gitCommit = ${gitCommit}"
                echo "shortGitCommit = ${shortGitCommit}"
                echo "previousGitCommit = ${previousGitCommit}"
            }

            stage('pacakge') {

                sh 'mvn package -Dmaven.test.skip=true'
            }

            container('docker') {

                stage('docker-login') {
                    //REGISTRY_URL私有仓库地址，也可使用官方地址：docker.io
                    sh "docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD} ${REGISTRY_URL}"
                }

                stage('docker-build') {
                    sh "docker build . -t ${REGISTRY_URL}/lusyoe/k8s-example:${shortGitCommit}"
                }

                stage('docker-push') {
                    sh "docker push ${REGISTRY_URL}/lusyoe/k8s-example:${shortGitCommit}"
                }
            }

        }

        stage('k8s deploy') {
            container('kubectl') {
                sh "sed -i \"s/lusyoe\\/k8s-example/${REGISTRY_URL}\\/lusyoe\\/k8s-example:${shortGitCommit}/g\" k8s-example.yaml"

                sh "kubectl --kubeconfig=/root/.kube/config apply -f k8s-example.yaml"
            }
        }

    }
}

// vim: ft=groovy
