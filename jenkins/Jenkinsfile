#!/usr/bin/env groovy

def projectProperties = [
        [$class: 'BuildDiscarderProperty', strategy: [$class: 'LogRotator', numToKeepStr: '5']],
]

properties(projectProperties)


podTemplate(label: 'mypod', cloud: 'kubernetes', containers: [
        containerTemplate(name: 'maven', image: 'maven', command: 'cat', ttyEnabled: true),
        containerTemplate(name: 'docker', image: 'docker', command: 'cat', ttyEnabled: true),
        containerTemplate(name: 'kubectl', image: 'lachlanevenson/k8s-kubectl:v1.10.2', command: 'cat', ttyEnabled: true)
],
        volumes: [
                hostPathVolume(hostPath: '/var/run/docker.sock', mountPath: '/var/run/docker.sock'),
                hostPathVolume(hostPath: '/root/.kube', mountPath: '/root/.kube')
        ]) {

    node('mypod') {
        container('maven') {

            stage('checkout') {
                checkout scm
            }

            stage('pacakge') {

                sh 'mvn package -Dmaven.test.skip=true'
            }

            container('docker') {

                stage('docker-login') {
                    sh "docker login -u ${DOCKER_HUB_USER} -p ${DOCKER_HUB_PASSWORD}"
                }

                stage('docker-build') {
                    sh "docker build . -t lusyoe/k8s-example:latest"
                }

                stage('docker-push') {
                    sh 'docker push lusyoe/k8s-example:latest'
                }
            }

        }

        stage('k8s deploy') {
            container('kubectl') {
                sh "kubectl --kubeconfig=/root/.kube/config apply -f k8s-example.yaml"
            }
        }

    }
}

// vim: ft=groovy
